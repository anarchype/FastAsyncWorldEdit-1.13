buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
}

plugins {
    id 'org.spongepowered.plugin' version '0.9.0'
}

repositories {
    maven { url "https://repo.codemc.org/repository/maven-public" }
}

dependencies {
    compile project(':worldedit-core')
    compile 'org.spongepowered:spongeapi:7.1.0'
    compile 'org.bstats:bstats-sponge:1.4'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.9.0-rc1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jar.archiveName="fawe-sponge-${project.parent.version}.jar"
jar.destinationDir = file '../mvn/com/boydti/fawe-sponge/' + project.parent.version
task createPom << {
    pom {
        project {
            groupId 'com.boydti'
            artifactId 'fawe-sponge'
            version project.parent.version
        }
    }
    .getEffectivePom()
            .setDependencies(new ArrayList<>())
            .writeTo("../mvn/com/boydti/fawe-sponge/${project.parent.version}/fawe-sponge-${project.parent.version}.pom")
    pom {
        project {
            groupId 'com.boydti'
            artifactId 'fawe-sponge'
            version 'latest'
        }
    }
    .getEffectivePom()
            .setDependencies(new ArrayList<>())
            .writeTo("../mvn/com/boydti/fawe-sponge/latest/fawe-sponge-latest.pom")
}
task copyFiles {
    doLast {
        copy {
            from "../mvn/com/boydti/fawe-sponge/${project.parent.version}/"
            into '../mvn/com/boydti/fawe-sponge/latest/'
            include('*.jar')
            rename ("fawe-sponge-${project.parent.version}.jar", 'fawe-sponge-latest.jar')
        }
    }
}

shadowJar {
    dependencies {
        include(dependency(':worldedit-core'))
        include(dependency('org.bstats:bstats-sponge:1.4'))
    }
    archiveName = "${parent.name}-${project.name.replaceAll("worldedit-", "")}-${parent.version}.jar"
    destinationDir = file '../target'
}

build.dependsOn(shadowJar)
build.finalizedBy(copyFiles)
copyFiles.dependsOn(createPom)
